d_list = [1, 1.1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 30, 32, 33, 35, 36, 38, 39, 40, 42, 45, 48, 50, 52, 55, 56, 58, 60, 62, 64, 65, 68, 70, 72, 75, 76, 78, 80, 82, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170]
all_p_values = [0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.6, 0.7, 0.75, 0.8, 1, 1.25, 1.5, 1.57, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 8]
p_list = [
    [1.0, 1.1, 1.2, 1.4, 1.6, 1.8],                                                                                                                                                                                                                                                                   # 0.2
    [1.0, 1.1, 1.2, 2.0, 2.2],                                                                                                                                                                                                                                                                        # 0.25
    [1.4],                                                                                                                                                                                                                                                                                            # 0.3
    [1.6, 1.8, 2.5, 3.0, 3.5],                                                                                                                                                                                                                                                                        # 0.35
    [2.0, 2.2],                                                                                                                                                                                                                                                                                       # 0.4
    [2.5],                                                                                                                                                                                                                                                                                            # 0.45
    [3.0, 4.0, 4.5, 5.0, 5.5, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 16.0, 18.0, 20.0, 22.0],                                                                                                                                                                                                    # 0.5
    [3.5],                                                                                                                                                                                                                                                                                            # 0.6
    [4.0],                                                                                                                                                                                                                                                                                            # 0.7
    [4.5, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 16.0, 18.0, 20.0, 22.0, 24.0, 25.0, 30.0, 33.0],                                                                                                                                                                                                # 0.75
    [5.0],                                                                                                                                                                                                                                                                                            # 0.8
    [6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 15.0, 16.0, 17.0, 18.0, 20.0, 22.0, 24.0, 25.0, 28.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0, 48.0, 52.0, 56.0, 60.0, 64.0, 68.0, 72.0, 76.0, 80.0] ,                                                                                                    # 1
    [8.0, 9.0, 10.0, 12.0, 14.0] ,                                                                                                                                                                                                                                                                     # 1.25
    [10.0, 11.0, 12.0, 14.0, 15.0, 16.0, 17.0, 18.0, 20.0, 22.0, 24.0, 25.0, 28.0, 30.0, 32.0, 33.0, 35.0, 36.0, 38.0, 39.0, 40.0, 42.0, 45.0, 48.0, 50.0, 52.0, 55.0, 56.0, 58.0, 60.0, 62.0, 64.0, 65.0, 68.0, 70.0, 72.0, 75.0, 76.0, 80.0, 85.0, 90.0, 95.0, 100.0, 110.0],                       # 1.5
    [12.0],                                                                                                                                                                                                                                                                                           # 1.57
    [14.0, 16.0, 18.0, 20.0, 22.0, 24.0, 25.0, 28.0, 30.0, 32.0, 33.0, 36.0, 39.0, 40.0, 42.0, 45.0, 48.0, 50.0, 52.0, 55.0, 56.0, 58.0, 60.0, 62.0, 64.0, 65.0, 68.0, 70.0, 72.0, 75.0, 76.0, 78.0, 80.0, 82.0, 85.0, 90.0, 95.0, 100.0, 110.0, 115.0, 120.0, 130.0, 135.0, 140.0, 145.0, 150.0],    # 2
    [18.0, 20.0, 22.0],                                                                                                                                                                                                                                                                               #2.5
    [24.0, 30.0, 33.0, 36.0, 39.0, 40.0, 42.0, 45.0, 48.0, 50.0, 52.0, 55.0, 56.0, 58.0, 60.0, 62.0, 64.0, 65.0, 68.0, 70.0, 72.0, 75.0, 76.0, 80.0, 85.0, 90.0, 95.0, 100.0, 105.0, 110.0, 115.0, 120.0, 125.0, 130.0, 135.0, 140.0, 145.0, 150.0, 155.0, 160.0, 165.0, 170.0],                      # 3
    [30.0, 33.0],                                                                                                                                                                                                                                                                                     # 3.5
    [39.0, 42.0, 45.0, 48.0, 52.0, 55.0, 56.0, 58.0, 60.0, 62.0, 64.0, 65.0, 68.0, 70.0, 72.0, 75.0, 76.0, 80.0, 85.0, 90.0, 95.0, 100.0, 105.0, 110.0, 115.0, 120.0, 125.0, 130.0, 135.0, 140.0, 145.0, 150.0, 155.0, 160.0, 165.0, 170.0],                                                          # 4
    [42.0, 45.0],                                                                                                                                                                                                                                                                                     # 4.5
    [48.0, 52.0],                                                                                                                                                                                                                                                                                     # 5
    [56.0, 60.0],                                                                                                                                                                                                                                                                                     # 5.5
    [64.0, 68.0, 70.0, 72.0, 76.0, 80.0, 85.0, 90.0, 95.0, 100.0, 105.0, 110.0, 115.0, 120.0, 125.0, 130.0, 135.0, 140.0, 145.0, 150.0, 155.0, 160.0, 165.0, 170.0],                                                                                                                                  # 6
    [125.0, 130.0, 140.0, 150.0, 160.0, 170.0],                                                                                                                                                                                                                                                       # 8
]

def p_assigment(D):
    p_allowed = []
    for i in range(len(p_list)):
        if D in d_list and D in p_list[i]:
            p_allowed.append(all_p_values[i])
        else:
            pass
    return p_allowed

def d1_assigment(D, P):
    d1 =  D - P * 0.6495
    return round(d1, 3)




def d2_assigment(D, P):
    d2 = D - P * 1.0825
    return round(d2, 3)


def d3_assigment(D, P):
    d3 = D - P * 1.227
    return round(d3, 3)


class Zavit:
    def __init__(self, D, P):
        Zavit.name = f"M{D}"
        Zavit.D = D
        Zavit.P = P
        Zavit.d1 = d1_assigment(D, P)
        Zavit.d2 = d2_assigment(D, P)
        Zavit.d3 = d3_assigment(D, P)


def thread_create(D, P):
    thread = Zavit(D, P)
    name = [thread.name, thread.D, thread.P, thread.d1, thread.d2, thread.d3]
    return name

def thread_print(D, P):
    thread = Zavit(D, P)
    name = [thread.D, thread.P, thread.d1, thread.d2, thread.d3]
    return (f"M{D}x{P}\nd1 = {name[2]}mm\nd2 = {name[3]}mm\nd3 = {name[-1]}mm")




## -------------Test-------------
#while True:
#    while True:
#        try:
#            D = float(input("D: "))
#            if D not in d_list:
#                print("Invalid value\n" + cara) 
#                continue
#            allowed = p_assigment(D)
#            print(allowed)
#            P = input("P: ")
#            if P == "":
#                P = allowed[-1]
#                print("Thread pitch was not selected, using default value")
#                pass
#            else:
#                P = float(P)
#            pass
#        except:
#            print("Invalid value\n" + cara)
#            continue
#        if P not in allowed:
#            print("Invalid value\n" + cara)
#            continue
#        else:
#            break
#    if P == 0:
#        P = p_assigment(D)
#        print("\nThread pitch hasn't been selected, using default value")
#    else:
#        pass
#
#    thread_create(D, P)
#    print(cara + thread_print(D, P))
#    while True:
#        exit = input(cara + "End programme? (y/n): ").lower()
#        if exit == "n":
#            break
#        elif exit == "y":
#            quit()
#        else:
#            print("Invalid input")